QUnit.test("barData array must be defined to store progress bar data",function(e){e.expect(1),e.ok(barData,"barData array is defined")}),QUnit.test("barData array must contain id, name, value and total for all elements",function(e){e.expect(3*ractive.get("dataBar").length);for(var a=0;a<ractive.get("dataBar").length;a++)e.ok(ractive.get("dataBar."+a+".id"),"barData index "+a+" 'id' is defined"),e.ok(ractive.get("dataBar."+a+".name"),"barData index "+a+" 'name' is defined"),e.ok(ractive.get("dataBar."+a+".value"),"barData index "+a+" 'value' is defined and must be greater than 0")}),QUnit.test("ractive must be defined to initialize ractive framework",function(e){e.expect(1),e.ok(ractive,"ractive framework is defined")}),QUnit.test("checkWidthValue must be between 0 and 100",function(e){var a=checkWidthValue(0),t=checkWidthValue(120),n=checkWidthValue(50);e.expect(3),e.deepEqual(a,0,"Width is not less than 0"),e.deepEqual(t,100,"Width is no greater than 100"),e.deepEqual(n,50,"Width between 0 and 100 are returned as the value submitted")}),QUnit.test("checkValidValue must be no less than 0",function(e){var a=checkValidValue(-1),t=checkValidValue(120),n=checkValidValue(50);e.expect(3),e.deepEqual(a,0,"Value is not less than 0"),e.deepEqual(t,120,"Value can be greater than 100"),e.deepEqual(n,50,"Value between 0 and 100 are returned as the value submitted")}),QUnit.test("calcPercent no less than 0, but can be greater than 100",function(e){var a=calcPercent(20,10,!1),t=calcPercent(20,100,!0);e.expect(2),e.deepEqual(a,0,"Value is not less than 0"),e.deepEqual(t,120,"Value is greater than 100")}),QUnit.test("fullBar returns 'fullClass' str if value>=100",function(e){var a=fullBar(55),t=fullBar(100),n=fullBar(150);e.expect(3),e.deepEqual(a,"","Return empty string for less than 100"),e.deepEqual(t,"full","Return 'full' as string for equals 100"),e.deepEqual(n,"full","Return 'full' as string for greater than 100")});